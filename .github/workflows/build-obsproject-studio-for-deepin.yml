name: OBS Studio For Deepin
on: 
  workflow_dispatch:
    inputs:
      #apt-upgrade-channel:
        #description: 'APT额外更新通道'
        #required: true
        #type: choice
        #default: testing
        #options:
        #- unstable
        #- testing
      dns-server:
        description: 'DNS服务器'
        required: false
        type: string
      tmate-enabled:
        type: boolean
        description: '构建完毕后启用tmate以手动测试'
        required: false
        default: false
jobs:
  deepin-beige:
    runs-on: ubuntu-latest
    container:
      image: linuxdeepin/beige:base
    env:
      BUILD_FOR_DISTRIBUTION: 'ON'
    steps:
      - 
        name: Deepin Linux installation is complete
        run: |
          # Deepin Linux 安装完毕
      - 
        if: ${{ inputs.dns-server }}
        name: Set DNS Server
        run: |
          # 首行不给看,要看指令的自己点展开
          # 他妈的还要另外设置DNS真的是醉了
          # 哦 内置地址不能在 GitHub 使用, 那没事了
          echo "nameserver ${{ inputs.dns-server }}" > /etc/resolv.conf
      - 
        name: Upgrade System
        run: |
          # 首行不给看,要看指令的自己点展开
          echo "deb https://community-packages.deepin.com/beige/ beige main commercial community" > /etc/apt/sources.list
          #---------------------------
          #case ${{ inputs.apt-upgrade-channel }} in
            #"stable" ) url="$(echo "deb https://community-packages.deepin.com/beige/ beige main commercial community")" ;;
            #"unstable" ) url="$(echo "deb [trusted=yes] https://ci.deepin.com/repo/topics/beige/unstable/ unstable main")" ;;
            #"testing" ) url="$(echo "deb [trusted=yes] https://ci.deepin.com/repo/release/beige/ testing main")" ;;
          #esac  
          #echo $url >> /etc/apt/sources.list
          #---------------------------
          echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/main/standard/ ./" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/community/deepin_develop/ ./" >> /etc/apt/sources.list
          #----------------------------
          echo "::group::APT Detect"
          apt update
          apt install -y sudo
          #apt dist-upgrade -y
      - 
        uses: actions/checkout@v3
        name: Checkout Git Repository
        with:
          repository: "obsproject/obs-studio"
          ref: "refs/tags/29.0.2"
          submodules: 'recursive'
          path: 'obs-studio'
          fetch-depth: 0
      - 
        name: 'Install dependencies'
        shell: bash
        working-directory: 'obs-studio'
        run: |
          # 首行不给看,要看指令的自己点展开
          CI/linux/01_install_dependencies.sh --disable-pipewire
      - 
        name: Build OBS Studio
        shell: bash
        working-directory: 'obs-studio'
        run: |
          # 首行不给看,要看指令的自己点展开
          CI/build-linux.sh --disable-pipewire --skip-dependency-checks --portable
      - 
         name: Manual Debug Service
         uses: mxschmitt/action-tmate@v3
         if: ${{ github.event_name == 'workflow_dispatch' && inputs.tmate-enabled }}
         timeout-minutes: 30
